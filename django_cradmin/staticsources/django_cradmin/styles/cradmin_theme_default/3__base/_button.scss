/*
Buttons

In most cases you should not use the button class for links. Use either `<button>` or `<input type="submit" />`
when using buttons. <strong>Never</strong> use `<span>`, `<div>` or elements without a semantic meaning as buttons.

Example: {type: isolated} The default button
    <button type="button" class="button">Button</button>
    <button type="button" class="button  button--fill">Button</button>

Example: {type: isolated} For primary actions, use this only to separate from other actions.
    <button type="button" class="button  button--primary">Button</button>
    <button type="button" class="button  button--primary-fill">Button</button>

Example: {type: isolated} For secondary actions, don't overuse.
    <button type="button" class="button  button--secondary">Button</button>
    <button type="button" class="button  button--secondary-fill">Button</button>

Example: {type: isolated} For actions that need's to stand out on red or dark blue background.
    <button type="button" class="button  button--light">Button</button>
    <button type="button" class="button  button--light-fill">Button</button>

Example: {type: isolated} This is some modifiers you can add (PS: Can be combined)
    <button type="button" class="button  button--block">
        Make it 100% width of whatever container
    </button>
    <button type="button" class="button  button--compact">Compact button</button>
    <br>
    <button type="button" class="button  button--wider">Wider button</button>
    <br>
    <button type="button" class="button  button--spaced">Spaced button</button>
    <br>
    <button type="button" class="button" disabled>Disabled button</button>

Styleguide 3.2
*/

@mixin button($b-name, $b-main, $b-text, $b-hover, $b-text-hover: false) {
    &--#{$b-name} {
        color: $b-text;
        border-color: $b-main;
        background-color: transparent;

        &:hover,
        &:focus,
        &:active {
            border-color: $b-hover;
            background-color: $b-hover;

            @if ($b-text-hover) {
                color: $b-text-hover;
            } @else {
                color: color-contrast($b-hover);
            }
        }
    }

    &--#{$b-name}-fill {
        border-color: $b-hover;
        background-color: $b-hover;

        @if ($b-text-hover) {
            color: $b-text-hover;
        } @else {
            color: color-contrast($b-hover);
        }

        &:hover,
        &:focus,
        &:active {
            color: $b-text;
            border-color: $b-main;
            background-color: transparent;
        }
    }

    &--hidden-in-print {
        @media print {
            display: none;
        }
    }
}

.button {
    @include spaced-text;
    @include font-size(small);
    text-align: center;

    position: relative;
    display: block;
    width: 100%;
    padding: $spacing--small; // TODO: What to do?!
    border-radius: 0;

    color: $color-text;
    white-space: normal;

    border: $border-width solid color(neutral);
    background-color: transparent;
    margin-bottom: $unit;

    @include min-width(md) {
        display: inline-block;
        white-space: nowrap;
        width: auto;
        padding: $spacing--small #{$indention - $border-width};
    }

    &:hover,
    &:focus,
    &:active {
        color: $color-light;
        border-color: color(neutral);
        background-color: color(neutral);
    }

    &:focus {
        z-index: 2;
    }

    &--fill {
        color: $color-light;
        border-color: color(neutral);
        background-color: color(neutral);

        &:hover,
        &:focus,
        &:active {
            color: $color-text;
            border-color: color(neutral);
            background-color: transparent;
        }
    }

    @include button(
        'primary',
        color(primary),
        color(primary),
        color(primary, dark)
    );

    @include button(
        'secondary',
        color(secondary, dark),
        color(secondary, dark),
        color(secondary, dark)
    );

    @include button(
        'light',
        $color-light,
        $color-light,
        $color-light,
        color(primary)
    );

    &--wider {
        min-width: $unit * 30;
    }

    &--spaced {
        @include min-width(md) {
            margin-left: $spacing--small;
            margin-right: $spacing--small;
        }
    }

    &--block {
        display: block;
        width: 100%;
    }

    &--compact {
        @include font-size(xsmall);
        padding: $unit $spacing--small;
    }

    &[disabled] {
        pointer-events: none;
        opacity: 0.4;
    }

    // General rules for icons in buttons
    [class^='icon-'] {
        vertical-align: middle;
        margin-right: $unit;
    }
}
